# Generated by Django 5.2.4 on 2025-07-24 12:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a clear, engaging title for your poll', max_length=200, verbose_name='Poll Title')),
                ('description', models.TextField(blank=True, help_text='Optional: Add more context about your poll', verbose_name='Description')),
                ('poll_type', models.CharField(choices=[('single', 'Single Choice'), ('multiple', 'Multiple Choice'), ('rating', 'Rating Scale'), ('yes_no', 'Yes/No')], default='single', max_length=20, verbose_name='Poll Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('expired', 'Expired'), ('closed', 'Closed')], default='draft', max_length=20, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to temporarily disable voting', verbose_name='Is Active')),
                ('allow_multiple_votes', models.BooleanField(default=False, help_text='Allow users to vote for multiple options', verbose_name='Allow Multiple Votes')),
                ('require_login', models.BooleanField(default=False, help_text='Require users to be logged in to vote', verbose_name='Require Login')),
                ('show_results', models.BooleanField(default=True, help_text='Show live results to voters', verbose_name='Show Results')),
                ('allow_anonymous', models.BooleanField(default=True, help_text='Allow voting without registration', verbose_name='Allow Anonymous Voting')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional: Set when poll should automatically close', null=True, verbose_name='Expires At')),
                ('slug', models.SlugField(blank=True, help_text='Unique URL identifier', unique=True)),
                ('total_votes', models.IntegerField(default=0)),
                ('unique_voters', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_polls', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Poll',
                'verbose_name_plural': 'Polls',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Choice Text')),
                ('description', models.TextField(blank=True, help_text='Optional: Add more details about this choice', verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Optional: Add an image for this choice', null=True, upload_to='choice_images/', verbose_name='Choice Image')),
                ('votes', models.IntegerField(default=0, verbose_name='Vote Count')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.poll', verbose_name='Poll')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PollAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes_by_hour', models.JSONField(default=dict, help_text='Hourly vote distribution', verbose_name='Votes by Hour')),
                ('votes_by_day', models.JSONField(default=dict, help_text='Daily vote distribution', verbose_name='Votes by Day')),
                ('votes_by_country', models.JSONField(default=dict, help_text='Country-wise vote distribution', verbose_name='Votes by Country')),
                ('votes_by_device', models.JSONField(default=dict, help_text='Device type distribution', verbose_name='Votes by Device')),
                ('votes_by_referrer', models.JSONField(default=dict, help_text='Traffic source distribution', verbose_name='Votes by Referrer')),
                ('peak_voting_time', models.DateTimeField(blank=True, null=True, verbose_name='Peak Voting Time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('poll', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='polls.poll', verbose_name='Poll')),
            ],
            options={
                'verbose_name': 'Poll Analytics',
                'verbose_name_plural': 'Poll Analytics',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_ip', models.GenericIPAddressField(help_text='IP address of the voter', verbose_name='Voter IP')),
                ('voter_session', models.CharField(blank=True, help_text='Session key for anonymous voters', max_length=40, verbose_name='Session Key')),
                ('user_agent', models.TextField(blank=True, help_text='Browser information', verbose_name='User Agent')),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('is_valid', models.BooleanField(default=True, help_text='Whether this vote is considered valid', verbose_name='Is Valid')),
                ('flagged_reason', models.CharField(blank=True, help_text='Reason if vote was flagged as suspicious', max_length=100, verbose_name='Flagged Reason')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_records', to='polls.choice', verbose_name='Choice')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='polls.poll', verbose_name='Poll')),
                ('voter', models.ForeignKey(blank=True, help_text='Registered user who voted (if logged in)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='Voter')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'ordering': ['-voted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='poll',
            index=models.Index(fields=['creator', '-created_at'], name='polls_poll_creator_ec904b_idx'),
        ),
        migrations.AddIndex(
            model_name='poll',
            index=models.Index(fields=['slug'], name='polls_poll_slug_3e2bd9_idx'),
        ),
        migrations.AddIndex(
            model_name='poll',
            index=models.Index(fields=['status', 'is_active'], name='polls_poll_status_a8a71f_idx'),
        ),
        migrations.AddIndex(
            model_name='choice',
            index=models.Index(fields=['poll', 'order'], name='polls_choic_poll_id_cdd564_idx'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['poll', '-voted_at'], name='polls_vote_poll_id_d3abaf_idx'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['voter_ip', 'poll'], name='polls_vote_voter_i_066d04_idx'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['voter', 'poll'], name='polls_vote_voter_i_f88305_idx'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(condition=models.Q(('voter__isnull', False)), fields=('poll', 'voter'), name='unique_registered_user_vote'),
        ),
    ]
